# ========================================
# .gitignore para Central de Contratos
# Django + PythonAnywhere Deploy
# ========================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ========================================
# Django Specific
# ========================================

# Local settings
local_settings.py

# Database
*.sqlite3
*.db

# Static files (collected)
/staticfiles/
/static_collected/

# Media files (uploads)
/media/
uploads/

# Django migrations (keep structure, ignore data)
# migrations/
# */migrations/__pycache__/

# Django secret key and sensitive settings
secrets.json
settings_local.py
settings_production.py

# Django cache
django_cache/

# Django sessions
django_session/

# ========================================
# Environment & Configuration
# ========================================

# Environment variables
.env
.env.local
.env.production
.env.staging
.env.development

# Configuration files with sensitive data
config.ini
config.json
secrets.json

# ========================================
# Development Tools
# ========================================

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
desktop.ini

# ========================================
# PythonAnywhere Specific
# ========================================

# PythonAnywhere logs
/var/log/
*.log

# PythonAnywhere WSGI
# pythonanywhere_wsgi.py (keep this if customized)

# Backup files
*.bak
*.backup

# ========================================
# Project Specific
# ========================================

# Temporary files
temp/
tmp/
*.tmp

# Documentation builds
docs/_build/
docs/build/

# Test files
test_data/
fixtures/test_*.json

# Local development scripts
run_local.py
setup_local.py
reset_db.py

# Generated contracts (if storing locally)
generated_contracts/
contracts_output/

# Payment test files
payment_test_data/

# User uploads (avatars, documents)
user_uploads/

# Email attachments
email_attachments/

# ========================================
# Third-party Services
# ========================================

# Mercado Pago test files
mp_test_*
mercadopago_test/

# Google OAuth credentials (never commit)
google_credentials.json
client_secret*.json

# ========================================
# Logs and Monitoring
# ========================================

# Application logs
logs/
*.log
*.log.*

# Error logs
error.log
django.log
application.log

# Access logs
access.log

# Monitoring files
monitoring/
metrics/

# ========================================
# Build and Deployment
# ========================================

# Build files
build/
dist/

# Deployment scripts (keep templates)
deploy_prod.py
deploy_staging.py

# Docker (if used later)
docker-compose.override.yml
.dockerignore

# ========================================
# Backup and Archive
# ========================================

# Database backups
*.dump
*.sql
backup_*.json

# Full project backups
backup_*/
archives/

# ========================================
# Node.js (if using frontend tools)
# ========================================

node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# ========================================
# Additional Security
# ========================================

# SSL certificates
*.key
*.crt
*.pem
*.p12

# API keys and tokens
api_keys.txt
tokens.json

# Private keys
private_key*
*.private

# ========================================
# END OF .gitignore
# ========================================
